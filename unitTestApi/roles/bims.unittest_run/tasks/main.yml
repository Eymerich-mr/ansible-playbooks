---

- name: "Get bitbucket comment"
  uri:
    url: "{{ bitbucketURL }}/rest/api/latest/projects/{{ PULL_REQUEST_FROM_REPO_PROJECT_KEY }}/repos/{{ PULL_REQUEST_FROM_REPO_SLUG }}/pull-requests/{{ PULL_REQUEST_ID }}/comments/{{ bitbucketComment.json.id }}"
    method: GET
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  register: "commentBB"

- name: "Notify bitbucket instance"
  uri:
    url: "{{ commentBB.url }}"
    method: PUT
    body: "{\"text\":\"{{ msg }}\",\"avatarSize\":\"64\",\"version\":\"{{ commentBB.json.version }}\"}"
    body_format: json
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  vars:
    msg: "{{ commentBB.json.text | replace('\n','\\n') }}\\n{{ testSuite }}{{ imgPending }}"

- name: "Create network {{ slotname }}"
  docker_network:
    name: "{{ slotname }}"

- name: "Create RAMDISK dir"
  file:
    path: "/media/ramdisk_{{ slotname }}"
    state: directory
  become: true

- name: "Mount RAMDISK"
  mount:
    path: "/media/ramdisk_{{ slotname }}"
    src: tmpfs
    fstype: tmpfs
    opts: "size=700M"
    state: mounted
  become: true

- name: "Start activiti-database, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_activiti-database"
    image: mysql:5.6
    volumes:
    - "/media/ramdisk_{{ slotname }}/mysql:/var/lib/mysql"
    env:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: activiti
      MYSQL_PASSWORD: activitidevlocal
      MYSQL_DATABASE: activiti
    networks:
    - name: "{{ slotname }}"
      aliases:
      - activiti-database

- name: "Start mongo, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_mongo"
    image: mongo:3.6
    volumes:
    - "/media/ramdisk_{{ slotname }}/mongo:/data/db"
    networks:
    - name: "{{ slotname }}"
      aliases:
      - mongo

- name: "Start redis, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_redis"
    image: redis:3.2.1
    networks:
    - name: "{{ slotname }}"
      aliases:
      - redis

- name: "Start s3, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_s3"
    image: lphoward/fake-s3
    networks:
    - name: "{{ slotname }}"
      aliases:
      - s3

- name: "Start sqs, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_sqs"
    image: 042475824269.dkr.ecr.eu-west-1.amazonaws.com/phpmock:sqs
    networks:
    - name: "{{ slotname }}"
      aliases:
      - sqs

- name: "ECR login"
  shell: "$(aws ecr get-login --region eu-west-1 --no-include-email)"

- name: "Get mysql IP address"
  command: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' {{ slotname }}_activiti-database"
  register: mysql_ip_address
  changed_when: false

- name: "Wait for mysql database"
  wait_for:
    host: "{{ mysql_ip_address.stdout }}"
    port: 3306
    search_regex: "mysql_native_password"

- name: "Start activiti, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_activiti"
    image: 042475824269.dkr.ecr.eu-west-1.amazonaws.com/bims_bpm:latest
    pull: yes
    env:
      BIMS_ENV: local
      JAVA_OPTS: "-Xmx512m -XX:MaxMetaspaceSize=256m"
    networks:
    - name: "{{ slotname }}"
      aliases:
      - activiti

- name: "Get mongo IP address"
  command: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' {{ slotname }}_mongo"
  register: mongo_ip_address
  changed_when: false

- name: "Wait for mongo database"
  wait_for:
    host: "{{ mongo_ip_address.stdout }}"
    port: 27017

- name: "Start api-micro, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_php-fpm-micro"
    state: stopped
    image: 042475824269.dkr.ecr.eu-west-1.amazonaws.com/bims_api_micro:latest
    pull: yes
    env:
      BIMS_ENV: local
    networks:
    - name: "{{ slotname }}"
      aliases:
      - php-fpm-micro

- name: "Start web, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_ngnix"
    state: stopped
    image: 042475824269.dkr.ecr.eu-west-1.amazonaws.com/bims_web:latest
    pull: yes
    env:
      BIMS_ENV: local
      SYMFONY_ENV: dev
    networks:
    - name: "{{ slotname }}"
      aliases:
      - nginx

- name: "Start phpmock, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_phpmock"
    image: 042475824269.dkr.ecr.eu-west-1.amazonaws.com/phpmock:sit
    pull: yes
    networks:
    - name: "{{ slotname }}"
      aliases:
      - php-mock

- name: "Get activiti IP address"
  command: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' {{ slotname }}_activiti"
  register: activiti_ip_address
  changed_when: false

- name: "Wait for activiti"
  wait_for:
    host: "{{ activiti_ip_address.stdout }}"
    port: 8080

- name: Wait until Activiti API is available
  uri:
    url: "http://{{ activiti_ip_address.stdout }}:8080/activiti-rest/repository/models"
    status_code: 401
  register: result
  until: result.status == 401
  retries: 12
  delay: 5

- name: "Start php-fpm, connect to network {{ slotname }}"
  docker_container:
    name: "{{ slotname }}_php-fpm"
    image: "{{ phpImage }}"
    pull: yes
    working_dir: "/var/www/html/app"
    command: "/var/www/html/bin/phpunit --testsuite {{ testSuite }}"
    detach: false
    recreate: yes
    cleanup: yes
    env:
      BIMS_ENV: local
      BIZTALK_HOST: 'http\:\/\/php-mock\/Services\/Sales\/biztalk.php\/'
      AWS_ACCESS_KEY_ID: "dummy"
      AWS_SECRET_ACCESS_KEY: "dummy"
      SYMFONY_DEPRECATIONS_HELPER: "weak"
    networks:
    - name: "{{ slotname }}"
      aliases:
      - php-fpm
  ignore_errors: yes
  register: results

- name: "debug bb"
  debug:
    msg: "{{ results }}"

- name: "Results Summary"
  debug:
    msg: "{{ results.msg if results.failed else (results.ansible_facts.docker_container.Output | regex_search(exp)) }}"
  vars:
    exp: "OK \\(\\d+ tests, \\d+ assertions\\)"
  register: "results_formatted"

- name: "debug results formatted"
  debug:
    msg: "{{ results_formatted }}"

- name: "Insert value in redis"
  docker_container:
    name: "phpunit-cache-insert"
    image: redis:32bit
    detach: no
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning SET {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ slotname }} '{{ not results.failed}}' EX 3600"

- name: "Get bitbucket comment"
  uri:
    url: "{{ bitbucketURL }}/rest/api/latest/projects/{{ PULL_REQUEST_FROM_REPO_PROJECT_KEY }}/repos/{{ PULL_REQUEST_FROM_REPO_SLUG }}/pull-requests/{{ PULL_REQUEST_ID }}/comments/{{ bitbucketComment.json.id }}"
    method: GET
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  register: "commentBB"

- name: "Notify bitbucket instance"
  uri:
    url: "{{ commentBB.url }}"
    method: PUT
    body: "{\"text\":\"{{ msg }}\",\"avatarSize\":\"64\",\"version\":\"{{ commentBB.json.version }}\"}"
    body_format: json
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  vars:
    msg: "{{ commentBB.json.text | replace('\n','\\n') | replace(testSuite + imgPending, testSuite + (imgKO if results.failed else imgOK) + results_formatted.msg) }}"