---

- name: "Wait for app slot"
  docker_container:
    name: "phpunit-cache"
    image: redis:32bit
    detach: no
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning GET {{ awx_workflow_job_name | default('wf') }}{{ awx_workflow_job_id | default('00') }}{{ item }}"
  register: "redis_container_{{ item }}"
  until: "redis_container_app.ansible_facts.docker_container.Output is defined"
  retries: 15
  delay: 1
  loop:
  - app

- name: "Wait for module slot"
  docker_container:
    name: "phpunit-cache"
    image: redis:32bit
    detach: no
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning GET {{ awx_workflow_job_name | default('wf') }}{{ awx_workflow_job_id | default('00') }}{{ item }}"
  register: "redis_container_{{ item }}"
  until: "redis_container_module.ansible_facts.docker_container.Output is defined"
  retries: 15
  delay: 1
  loop:
  - module

- name: "Wait for appController slot"
  docker_container:
    name: "phpunit-cache"
    image: redis:32bit
    detach: no
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning GET {{ awx_workflow_job_name | default('wf') }}{{ awx_workflow_job_id | default('00') }}{{ item }}"
  register: "redis_container_{{ item }}"
  until: "redis_container_appController.ansible_facts.docker_container.Output is defined"
  retries: 15
  delay: 1
  loop:
  - appController

- name: "Wait for integration slot"
  docker_container:
    name: "phpunit-cache"
    image: redis:32bit
    detach: no
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning GET {{ awx_workflow_job_name | default('wf') }}{{ awx_workflow_job_id | default('00') }}{{ item }}"
  register: "redis_container_{{ item }}"
  until: "redis_container_integration.ansible_facts.docker_container.Output is defined"
  retries: 15
  delay: 1
  loop:
  - integration

- name: "Final results"
  debug:
    msg: "{{ item }}: {{ lookup('vars',val) | default('KO') }}"
  vars:
    val: "redis_container_{{ item }}.ansible_facts.docker_container.Output"
  loop:
  - app
  - module
  - appController
  - integration