---

- name: "Wait for app slot"
  docker_container:
    name: "phpunit-cache-reader"
    image: redis:32bit
    detach: no
    recreate: yes
    cleanup: yes
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning EXISTS {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ item }}"
  register: "redis_container_tmp"
  until: "redis_container_tmp.ansible_facts.docker_container.Output == '1\n'"
  retries: 15
  delay: 30
  changed_when: false
  loop:
  - app

- name: "Wait for module slot"
  docker_container:
    name: "phpunit-cache-reader"
    image: redis:32bit
    detach: no
    recreate: yes
    cleanup: yes
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning EXISTS {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ item }}"
  register: "redis_container_tmp"
  until: "redis_container_tmp.ansible_facts.docker_container.Output == '1\n'"
  retries: 15
  delay: 30
  changed_when: false
  loop:
  - module

- name: "Wait for appController slot"
  docker_container:
    name: "phpunit-cache-reader"
    image: redis:32bit
    detach: no
    recreate: yes
    cleanup: yes
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning EXISTS {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ item }}"
  register: "redis_container_tmp"
  until: "redis_container_tmp.ansible_facts.docker_container.Output == '1\n'"
  retries: 15
  delay: 30
  changed_when: false
  loop:
  - appController

- name: "Wait for integration slot"
  docker_container:
    name: "phpunit-cache-reader"
    image: redis:32bit
    detach: no
    recreate: yes
    cleanup: yes
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning EXISTS {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ item }}"
  register: "redis_container_tmp"
  until: "redis_container_tmp.ansible_facts.docker_container.Output == '1\n'"
  retries: 15
  delay: 30
  changed_when: false
  loop:
  - integration

- name: "Notify bitbucket instance of FAILURE"
  uri:
    url: "{{ bitbucketURL }}/rest/build-status/latest/commits/{{ PULL_REQUEST_FROM_HASH }}"
    method: POST
    body: "{\"key\":\"{{ key }}\",\"state\":\"{{ state }}\",\"url\":\"{{ url }}\",\"name\":\"{{ name }}\",\"description\":\"{{ description }}\"}"
    body_format: json
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 204
  vars:
    key: "{{ awx_workflow_job_name }} #{{ awx_workflow_job_id }}"
    state: "FAILED"
    url: "http://10.125.104.112/#/workflows/{{ awx_workflow_job_id }}"
    name: "Click for more details"
    description: "{{ awx_workflow_job_name }} #{{ awx_workflow_job_id }}"

- name: "Record end time"
  set_fact:
    END_TIME: "{{ lookup('pipe','date \"+%s\"') | int }}"

- name: "Record elapsed time"
  set_fact:
    ELAPSED: "{{ '%H:%M:%S' | strftime(END_TIME - START_TIME ) }}"

- name: "Get bitbucket comment"
  uri:
    url: "{{ bitbucketURL }}/rest/api/latest/projects/{{ PULL_REQUEST_FROM_REPO_PROJECT_KEY }}/repos/{{ PULL_REQUEST_FROM_REPO_SLUG }}/pull-requests/{{ PULL_REQUEST_ID }}/comments/{{ bitbucketComment.json.id }}"
    method: GET
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  register: "commentBB"

- name: "Notify bitbucket instance"
  uri:
    url: "{{ commentBB.url }}"
    method: PUT
    body: "{\"text\":\"{{ msg }}\",\"avatarSize\":\"64\",\"version\":\"{{ commentBB.json.version }}\"}"
    body_format: json
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 200
  vars:
    msg: "{{ commentBB.json.text | replace('started', 'took ' + ELAPSED) | replace('\n','\\n') }}"

- name: "Calculate final results"
  docker_container:
    name: "phpunit-cache-reader"
    image: redis:32bit
    detach: no
    recreate: yes
    cleanup: yes
    command: "redis-cli -h {{ redisHost }} -p {{ redisPort }} -a {{ redisPass}} --no-auth-warning GET {{ awx_workflow_job_name }}{{ awx_workflow_job_id }}{{ item }}"
  register: "redis_container_final"
  changed_when: false
  failed_when: "redis_container_final.ansible_facts.docker_container.Output != 'True\n'"
  loop:
  - app
  - module
  - appController
  - integration

- name: "Notify bitbucket instance of SUCCESSFUL"
  uri:
    url: "{{ bitbucketURL }}/rest/build-status/latest/commits/{{ PULL_REQUEST_FROM_HASH }}"
    method: POST
    body: "{\"key\":\"{{ key }}\",\"state\":\"{{ state }}\",\"url\":\"{{ url }}\",\"name\":\"{{ name }}\",\"description\":\"{{ description }}\"}"
    body_format: json
    user: "{{ bitbucketUser }}"
    password: "{{ bitbucketPassword }}"
    force_basic_auth: yes
    status_code: 204
  vars:
    key: "{{ awx_workflow_job_name }} #{{ awx_workflow_job_id }}"
    state: "SUCCESSFUL"
    url: "http://10.125.104.112/#/workflows/{{ awx_workflow_job_id }}"
    name: "Click for more details"
    description: "{{ awx_workflow_job_name }} #{{ awx_workflow_job_id }}"